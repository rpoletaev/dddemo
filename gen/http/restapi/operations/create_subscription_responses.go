// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"subscription/gen/http/models"
)

// CreateSubscriptionCreatedCode is the HTTP code returned for type CreateSubscriptionCreated
const CreateSubscriptionCreatedCode int = 201

/*CreateSubscriptionCreated OK

swagger:response createSubscriptionCreated
*/
type CreateSubscriptionCreated struct {
}

// NewCreateSubscriptionCreated creates CreateSubscriptionCreated with default headers values
func NewCreateSubscriptionCreated() *CreateSubscriptionCreated {

	return &CreateSubscriptionCreated{}
}

// WriteResponse to the client
func (o *CreateSubscriptionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateSubscriptionConflictCode is the HTTP code returned for type CreateSubscriptionConflict
const CreateSubscriptionConflictCode int = 409

/*CreateSubscriptionConflict error

swagger:response createSubscriptionConflict
*/
type CreateSubscriptionConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSubscriptionConflict creates CreateSubscriptionConflict with default headers values
func NewCreateSubscriptionConflict() *CreateSubscriptionConflict {

	return &CreateSubscriptionConflict{}
}

// WithPayload adds the payload to the create subscription conflict response
func (o *CreateSubscriptionConflict) WithPayload(payload *models.Error) *CreateSubscriptionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create subscription conflict response
func (o *CreateSubscriptionConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSubscriptionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSubscriptionInternalServerErrorCode is the HTTP code returned for type CreateSubscriptionInternalServerError
const CreateSubscriptionInternalServerErrorCode int = 500

/*CreateSubscriptionInternalServerError error

swagger:response createSubscriptionInternalServerError
*/
type CreateSubscriptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSubscriptionInternalServerError creates CreateSubscriptionInternalServerError with default headers values
func NewCreateSubscriptionInternalServerError() *CreateSubscriptionInternalServerError {

	return &CreateSubscriptionInternalServerError{}
}

// WithPayload adds the payload to the create subscription internal server error response
func (o *CreateSubscriptionInternalServerError) WithPayload(payload *models.Error) *CreateSubscriptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create subscription internal server error response
func (o *CreateSubscriptionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSubscriptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
